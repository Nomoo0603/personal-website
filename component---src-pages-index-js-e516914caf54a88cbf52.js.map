{"version":3,"sources":["webpack:///./src/components/Icons.js","webpack:///./src/utils/colors.js","webpack:///./src/pages/index.js"],"names":["Wrapper","styled","div","_templateObject","Anchor","a","_templateObject2","Icons","_ref","objectDestructuringEmpty_default","react_default","createElement","href","dist","color","size","Content","pages_templateObject","Typography","p","pages_templateObject2","Bold","_templateObject3","Image","Img","_templateObject4","Green","span","_templateObject5","query","_templateObject6","Homepage","data","fixed","file","childImageSharp","components_Icons"],"mappings":"6iBAeA,IAAMA,EAAUC,IAAOC,IAAVC,KAcPC,EAASH,IAAOI,EAAVC,IC5BS,WD6DNC,EAvBD,SAAAC,GAEZ,OAFoBC,IAAAD,GAGlBE,EAAAL,EAAAM,cAACX,EAAD,KACEU,EAAAL,EAAAM,cAACP,EAAD,CAAQQ,KAAK,wCACXF,EAAAL,EAAAM,cAACE,EAAA,OAAD,CAAQC,MC1CK,UD0CSC,KAAM,MAG9BL,EAAAL,EAAAM,cAACP,EAAD,CAAQQ,KAAK,iCACXF,EAAAL,EAAAM,cAACE,EAAA,QAAD,CAASC,MC9CI,UD8CUC,KAAM,MAG/BL,EAAAL,EAAAM,cAACP,EAAD,CAAQQ,KAAK,4CACXF,EAAAL,EAAAM,cAACE,EAAA,SAAD,CAAUC,MClDG,UDkDWC,KAAM,MAGhCL,EAAAL,EAAAM,cAACP,EAAD,CAAQQ,KAAK,0DACXF,EAAAL,EAAAM,cAACE,EAAA,UAAD,CAAWC,MCtDE,UDsDYC,KAAM,gtCEzCvC,IAAMC,EAAUf,IAAOC,IAAVe,KAqBPC,EAAajB,IAAOkB,EAAVC,KAOVC,EAAOpB,IAAOkB,EAAVG,KASJC,EAAQtB,YAAOuB,IAAPvB,CAAHwB,KAMLC,EAAQzB,IAAO0B,KAAVC,IDzDU,WCwFRC,GA3BD5B,IAAOC,IAAV4B,KAyBMC,UAlBE,SAAAvB,GAAA,IAAEwB,EAAFxB,EAAEwB,KAAF,OACftB,EAAAL,EAAAM,cAACK,EAAD,KACEN,EAAAL,EAAAM,cAACU,EAAD,wBACkBX,EAAAL,EAAAM,cAACe,EAAD,WAGlBhB,EAAAL,EAAAM,cAACY,EAAD,CAAOU,MAAOD,EAAKE,KAAKC,gBAAgBF,QAExCvB,EAAAL,EAAAM,cAACO,EAAD,2CAIAR,EAAAL,EAAAM,cAACyB,EAAD,QAQc","file":"component---src-pages-index-js-e516914caf54a88cbf52.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nimport { \n  GitHub,\n  Linkedin,\n  Twitter,\n  Instagram,\n} from 'react-feather';\n\nimport {\n  black,\n  green,\n} from '../utils/colors';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 1em 2em;\n\n  position: absolute;\n  bottom: 0;\n  right: 0;\n\n  > svg {\n    margin: 0.5em;\n  }\n`;\n\nconst Anchor = styled.a`\n  padding: 10px;\n  \n  :hover {\n    > svg {\n      stroke: ${green};\n    }\n  }\n`;\n\nconst Icons = ({}) => {\n  \n  return (\n    <Wrapper>\n      <Anchor href='https://github.com/dimitrisraptis96/'>\n        <GitHub color={black} size={24}/>\n      </Anchor>\n\n      <Anchor href='https://twitter.com/d__raptis'>\n        <Twitter color={black} size={24}/>\n      </Anchor>\n\n      <Anchor href='https://www.instagram.com/glitch_aholic/'>\n        <Linkedin color={black} size={24}/>\n      </Anchor>\n\n      <Anchor href='https://www.linkedin.com/in/dimitris-raptis-a7088b132/'>\n        <Instagram color={black} size={24}/>\n      </Anchor>\n    </Wrapper>    \n  );\n};\n\nexport default Icons;","export const darkgreen = \"#0D7B44\";\nexport const green = \"#33FF99\";\nexport const black = \"#121212\";\nexport const white = \"#f5f5f5\";\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\nimport styled from 'styled-components';\n\nimport Icons from '../components/Icons';\n\nimport {\n  darkgreen,\n  green,\n  black,\n  white\n} from '../utils/colors';\n\n\nconst Content = styled.div`\n  background-color: #f5f5f5;\n  position: absolute;\n  top: 0;\n  left: 0;\n  min-width: calc(100% - 10%);\n  min-height: 100%;\n  max-width: calc(100% - 10%);\n  /* max-height: 100%; */\n  margin: 0;\n\n  padding: 0 5%;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  background-color: #ececec;\n`;\n\nconst Typography = styled.p`\n  font-family: 'Poppins', sans-serif;\n  font-size: 1.5em;\n  font-weight: regular;\n  color: #121212;\n`;\n\nconst Bold = styled.p`\n  @import url('https://fonts.googleapis.com/css?family=Abril+Fatface');\n\tfont-family: 'Abril Fatface', cursive;\n  font-size: 5em;\n  /* font-weight: bold; */\n  color: #121212;\n`;\n\n\nconst Image = styled(Img)`\n  box-shadow: 0 8px 6px -6px black;\n  border-radius: 1000px;\n`;\n\n\nconst Green = styled.span`\n  color: ${green};\n`;\n\nconst Bio = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Homepage = ({data}) => (\n  <Content>\n    <Bold>\n      Dimitris Raptis <Green>.</Green>\n    </Bold>\n\n    <Image fixed={data.file.childImageSharp.fixed} />\n\n    <Typography >\n      I design and build user interfaces\n    </Typography>\n\n    <Icons/>\n\n  \n  </Content>\n)\n\nexport default Homepage;\n\nexport const query = graphql`\n  query {\n    file (relativePath: { eq: \"me.jpeg\" }) {\n      childImageSharp {\n        # Specify the image processing specifications right in the query.\n        # Makes it trivial to update as your page's design changes.\n        fixed(width: 125, height: 125) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}